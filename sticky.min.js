'use strict';(function(h) {
  function k(a) {
    for(var b = 1, c = arguments.length;b < c;b++) {
      var d = arguments[b], e;
      for(e in d) {
        a[e] = d[e]
      }
    }
    return a
  }
  function g(a) {
    var b = {top:0, left:0, right:0, bottom:0, width:0, height:0}, c = a.getBoundingClientRect();
    b.top = c.top + (window.pageYOffset || document.documentElement.scrollTop);
    b.left = c.left + (window.pageXOffset || document.documentElement.scrollLeft);
    b.width = a.offsetWidth;
    b.height = a.offsetHeight;
    b.right = document.width - c.right;
    b.bottom = window.innerHeight + (window.pageYOffset || document.documentElement.scrollTop) - c.bottom;
    return b
  }
  function f() {
    this.create.apply(this, arguments)
  }
  f.list = [];
  f.prototype = {options:{offset:0, e:null, vAlign:"top", l:"is-stuck", B:"sticky-stub", mode:"exclusive"}, create:function(a, b) {
    this.a = a;
    this.options = k({}, this.options, a.dataset, b);
    "string" === typeof this.options.e && (this.options.e = document.body.querySelector(this.options.e));
    this.options.offset = parseFloat(this.options.offset) || 0;
    this.a.t = f.list.length;
    f.list.push(this);
    this.f = this.g = !1;
    this.i = !0;
    this.b = {top:0, bottom:9999};
    this.height = 0;
    this.parent = {top:0, height:0};
    for(var c = this.a;null !== (c = c.previousSibling);) {
      if(void 0 !== c.t) {
        this.d = f.list[c.t];
        this.d.C = this;
        break
      }
    }
    this.c = this.a.cloneNode(!0);
    this.c.classList.add(this.options.B);
    this.c.style.visibility = "hidden";
    this.v = this.a.style.cssText;
    this.j = this.a.cloneNode(!0);
    this.u = document.createDocumentFragment();
    "static" == window.getComputedStyle(this.a.parentNode).position && (this.a.parentNode.style.position = "relative");
    this.h = this.h.bind(this);
    this.recalc = this.recalc.bind(this);
    this.recalc();
    this.h();
    document.addEventListener("scroll", this.h);
    window.addEventListener("resize", function() {
      this.recalc();
      this.h()
    }.bind(this));
    document.addEventListener("sticky:recalc", self.recalc)
  }, h:function() {
    var a = window.pageYOffset || document.documentElement.scrollTop;
    this.g ? (!this.i && a + this.options.offset + this.height >= this.b.bottom && this.q(), !this.f && a + this.options.offset <= this.b.top && this.A()) : (this.i || this.f) && a + this.options.offset > this.b.top && (a + this.options.offset + this.height < this.b.bottom ? this.s() : this.f || (this.s(), this.q()))
  }, A:function() {
    this.c = this.a.parentNode.removeChild(this.c);
    this.o();
    this.a.classList.remove(this.options.l);
    this.g = !1;
    this.i = !0;
    this.f = !1
  }, s:function() {
    this.f ? this.r(this.j) : this.r(this.c, this.j);
    this.p(this.j, this.a);
    this.a = this.a.parentNode.replaceChild(this.u, this.a);
    this.p(this.a);
    this.j = this.c.parentNode.replaceChild(this.a, this.j);
    this.g = !0;
    this.f = this.i = !1
  }, q:function() {
    this.a.classList.remove(this.options.l);
    this.w(this.a);
    this.g = !1;
    this.f = !0;
    this.i = !1
  }, w:function(a) {
    a.style.cssText = "";
    a.style.position = "absolute";
    a.style.top = this.b.bottom - this.parent.top - this.height + "px";
    this.k(a, this.c);
    a.style.left = this.c.offsetLeft + "px"
  }, p:function(a, b) {
    a.style.cssText = "";
    a.style.position = "fixed";
    a.style.top = this.options.offset + "px";
    a.classList.add(this.options.l);
    this.k(a, b || this.c)
  }, r:function() {
    for(var a = 0;a < arguments.length;a++) {
      this.u.appendChild(arguments[a])
    }
  }, recalc:function() {
    var a = this.g ? this.c : this.a;
    this.parent = g(a.parentNode);
    this.height = a.offsetHeight;
    if(this.options.e instanceof Element) {
      var b = g(this.options.e);
      this.b.top = Math.max(b.top, g(a).top);
      this.b.bottom = this.options.e.offsetHeight + b.top
    }else {
      this.options.e instanceof Object ? this.b = this.options.e : (this.b.top = g(a).top, this.b.bottom = this.parent.height + this.parent.top)
    }
    this.d && "exclusive" === this.options.mode && (this.d.b.bottom = this.b.top);
    if("stacked" === this.options.mode && this.d) {
      for(this.options.offset = this.d.options.offset + (this.d.g ? this.d.c : this.d.a).offsetHeight, a = this;a = a.d;) {
        a.b.bottom -= this.height
      }
    }
    this.g ? this.k(this.a, this.c) : this.o()
  }, m:["left", "top", "right", "bottom"], n:["padding-", "border-"], k:function(a, b) {
    var c = getComputedStyle(b), d = g(b);
    a.style.width = d.width + "px";
    a.style.left = d.left + "px";
    for(d = 0;d < this.n.length;d++) {
      for(var e = 0;e < this.m.length;e++) {
        var f = this.n[d] + this.m[e];
        a.style[f] = c[f]
      }
    }
  }, o:function() {
    this.a.style.cssText = this.v
  }};
  h && (h.fn.sticky = function(a) {
    return this.each(function(b, c) {
      var d = h(c), e = new f(d[0], a);
      d.data("sticky", e)
    })
  })
})(window.jQuery || window.Zepto);

